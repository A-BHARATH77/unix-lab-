#!/bin/bash

#q1
printRollNumbers () {
    for course in "21PW" "21PT" "21PD" "21PC"
    do
        for i in $(seq -w 1 40)
        do
            echo "$course$i"
        done
        echo ""
    done
}

listSevenLetterFiles () {
    ls | grep "b[[:lower:]][[:lower:]][[:lower:]]da[[:lower:]]"
}

currentDateFolder () {
    mkdir $(date "+%d-%b-%y")
}

userNameLength () {
    usernames=$(cat /etc/passwd | cut -d":" -f1 )
    for i in $usernames
    do
        echo $i ${#i}
    done
}

removePermissions() {
    if [ $# -ne 1 ]
    then
        echo "No args"
        return 1
    fi

    dir="$1"

    if [ ! -d "$dir" ]
    then
        echo "No such directory"
        return 1
    fi

    ls -l "$dir"

    for i in $(ls "$dir")
    do
        chmod go-rwx "$dir/$i"
    done

    echo "Removed :"
    ls -l "$dir"
    return 0

}
# removePermissions "$PWD/dummy"

sortEmployeeAndAlias () {
    if [ $# -ne 1 ]
    then
        echo "No args"
        return 1
    fi

    if [ ! -f "$dir" ]
    then
        echo "No such file"
        return 1
    fi

    employeeFile="$1"


    alias sortme="sort -k3,3 -k1,1 "$employeeFile""
}

grepTest () {

    if [ $# -ne 1 ]
    then
        echo "No args"
        return 1
    fi

    if [ ! -f "$dir" ]
    then
        echo "No such file"
        return 1
    fi

    file="$1"

    grep "^[[:upper:]][[:upper:]][[:space:]][[:upper:]]" "$file"
}

headAndTail(){

    if [ $# -ne 1 ]
    then
        echo "No args"
        return 1
    fi

    if [ ! -f "$dir" ]
    then
        echo "No such file"
        return 1
    fi

    cat "$1" | head -8 | tail +5
}

# Menu-driven interface
while true; do
    echo "Choose an option:"
    echo "1. Print Roll Numbers"
    echo "2. List Files with Seven Letters"
    echo "3. Create Current Date Folder"
    echo "4. Calculate User Name Length"
    echo "5. Remove Permissions from Directory"
    echo "6. Sort Employee and Alias"
    echo "7. Grep Test in File"
    echo "8. Display Head and Tail of File"
    echo "9. Exit"
    read -p "Enter your choice [1-9]: " choice

    case $choice in
        1)
            printRollNumbers
            ;;
        2)
            listSevenLetterFiles
            ;;
        3)
            currentDateFolder
            ;;
        4)
            userNameLength
            ;;
        5)
            read -p "Enter directory path: " dir
            removePermissions "$dir"
            ;;
        6)
            read -p "Enter file path: " file
            sortEmployeeAndAlias "$file"
            ;;
        7)
            read -p "Enter file path: " file
            grepTest "$file"
            ;;
        8)
            read -p "Enter file path: " file
            headAndTail "$file"
            ;;
        9)
            echo "Exiting..."
            exit 0
            ;;
        *)
            echo "Invalid choice. Please choose between 1-9."
            ;;
    esac
done
-------------------------------------------
#q2
#!/bin/bash

regular_files=$(find . -maxdepth 1 -type f | wc -l)
directories=$(find . -maxdepth 1 -type d | wc -l)
soft links=$(find . -maxdepth 1 -type l | wc -l)

# Print the report
echo "Type of files    Count"
echo "----------------------"
echo "Regular files    $regular_files"
echo "Directories      $directories"
echo "Softlinks        $softlinks"
--------------------------------------------
#q3
#!/bin/bash

errcho (){
    >&2 echo $@;
}


if [ $# -eq 0 ]
then
    errcho "Invalid usage."
    exit 1
elif [ $# -eq 1 ]
then
    exit 1
else
    size=$1
    shift
    for i in $@
    do
        if [ -e $i -a -f $i ]
        then
            fsize=$(wc -c $i | cut -d" " -f1)
            if [ $fsize -gt $size ]
            then
                echo "Contents of $i:"
                cat $i
            fi
        fi
    done
fi

INPUT OF ARRAYS 
#!/bin/bash

# Prompt the user for input
echo "Enter values separated by space:"

# Read input into an array
read -a arr

# Display the array
echo "You entered: ${arr[@]}"

# Display individual elements (optional)
echo "First element: ${arr[0]}"
echo "Second element: ${arr[1]}"

FOR LOOP 
for i in {1..5}
do
    echo "Number: $i"
done

for file in /path/to/directory/*
do
    echo "File: $file"
done

GREP 
$ grep pattern file_name1 file_name2 file_name3 // -w -c -v -n -o 
$ grep -r pattern * // search in directires 
$ grep -l pattern * // list of matching files only
$ grep -mNUM pattern file_name // Stop reading a file after NUM matching lines with grep command
grep -f pattern_file file_name // Take pattern from file using grep command
